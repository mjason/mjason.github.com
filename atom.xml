<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[天涯望帆]]></title>
  <link href="http://mjason.github.com/atom.xml" rel="self"/>
  <link href="http://mjason.github.com/"/>
  <updated>2013-02-25T00:22:30+08:00</updated>
  <id>http://mjason.github.com/</id>
  <author>
    <name><![CDATA[MJ（天涯望帆）]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[batman.js 结合rails 入门]]></title>
    <link href="http://mjason.github.com/blog/2013/02/24/batman-dot-js-jie-he-rails-ru-men/"/>
    <updated>2013-02-24T19:10:00+08:00</updated>
    <id>http://mjason.github.com/blog/2013/02/24/batman-dot-js-jie-he-rails-ru-men</id>
    <content type="html"><![CDATA[<p>batman.js 是一个很令人兴奋的前端mvc框架，不过文档是硬伤，外文资料少的可怜，中文资料更是一个悲剧!<br/>
这几天因为一个项目需要用到大量ajax，所以有一个想法用前端mvc来做一个整站的ajax，我看了backbone.js spine.js ember.js 等前端mvc，可是他们各自硬伤啊</p>

<ol>
<li>banbone.js 他的mvc让我感到陌生，从django到rails等web mvc我没看到这么样的mvc，十分复杂，而且让我写出来的代码不可控制</li>
<li>ember.js 他是一个很好的框架，可是依赖让我却步，比如你得使用jquery低版本，这是我没法接受的，而且ember太大了，文档也不是很好</li>
<li>spine.js 是一个很好的框架，例子和文档都很好，可是他却不能实时更新ui</li>
</ol>


<p>所以我选择baman.js, 不过这东西会让初学者感到沮丧，因为没有一个好的教程，而且官网文档也少得可怜, 有一个和rails结合的例子，可是作者又是haml拥戴者（这～～）硬着头皮看完，并且看了文档，写一下日志，方便自己以后查看</p>

<p>这里使用rails作为后端</p>

<h1>install</h1>

<p>在Gemfilel里面添加</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="s1">&#39;batman-rails&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>安装目录结构</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="ss">batman</span><span class="p">:</span><span class="n">install</span>
</span></code></pre></td></tr></table></div></figure>


<p>因为我们要使用mvc，所以我们最好关闭掉rails的自动生成coffeescipt
在application.rb添加</p>

<p>config.generators.javascripts = false</p>

<p>如果你想把自动生成scss的功能也给关掉可以继续添加上</p>

<p>config.generators.stylesheets = false <br/>
这样我们的基础工作就算ok了</p>

<h1>来一个demo吧！</h1>

<p>最简单也是最好用的一个demo就是写一个blog吧，这里我们用一个blog来开始我们的batman之旅，这个blog有这么几个要求：<br/>
1. 文章要有标题，内容和图片
2. 无刷新，整站使用ajax</p>

<h2>ruby</h2>

<p>我们需要使用使用基础的命令来生成一个项目</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="kp">new</span> <span class="n">blog</span>
</span></code></pre></td></tr></table></div></figure>


<p>在我们Gemfile里面添加上</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="s1">&#39;batman-rails&#39;</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;carrierwave&#39;</span> <span class="c1">#因为我们需要进行图片上传</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;bootstrap-sass&#39;</span><span class="p">,</span> <span class="s1">&#39;~&gt; 2.2.2.0&#39;</span> <span class="c1"># 为了让我们的demo好看点，我们用这个吧</span>
</span></code></pre></td></tr></table></div></figure>


<p>使用bundle进行gem的安装</p>

<p>之后我们先把自动生产javascipt的功能关掉
在application.rb添加<br/>
config.generators.javascripts = false</p>

<p>生成我们需要的api，这里因为我们需要快速完成，使用scaffold</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="n">scaffold</span> <span class="n">post</span> <span class="ss">title</span><span class="p">:</span><span class="n">string</span> <span class="ss">content</span><span class="p">:</span><span class="n">text</span> <span class="ss">image</span><span class="p">:</span><span class="n">string</span>
</span></code></pre></td></tr></table></div></figure>


<p>然后我们运行migrate来生成数据库</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rake</span> <span class="ss">db</span><span class="p">:</span><span class="n">migrate</span>
</span></code></pre></td></tr></table></div></figure>


<p>现在生成root首页</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="n">controller</span> <span class="n">home</span> <span class="n">index</span>
</span></code></pre></td></tr></table></div></figure>


<p>删除public/index.html，并且把app/views/home/index.html.erb 清空</p>

<p>添加root路由
config/routes.rb</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">BatmatBlog</span><span class="p">:</span><span class="ss">:Application</span><span class="o">.</span><span class="n">routes</span><span class="o">.</span><span class="n">draw</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">root</span> <span class="ss">to</span><span class="p">:</span> <span class="s2">&quot;home#index&quot;</span>
</span><span class='line'>  <span class="n">resources</span> <span class="ss">:pots</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>安装batman</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="ss">batman</span><span class="p">:</span><span class="n">install</span>
</span><span class='line'><span class="c1">#在javascipt里面创建views目录</span>
</span><span class='line'><span class="n">mkdir</span> <span class="n">app</span><span class="o">/</span><span class="n">assets</span><span class="o">/</span><span class="n">javascipts</span><span class="o">/</span><span class="n">views</span>
</span></code></pre></td></tr></table></div></figure>


<p>修改application.css 为application.css.scss
添加以下内容</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='scss'><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm"> *= require_self</span>
</span><span class='line'><span class="cm"> *= require_tree .</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'>
</span><span class='line'><span class="k">@import</span> <span class="s2">&quot;bootstrap&quot;</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>在application.js添加以下内容</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="c1">//= require jquery</span>
</span><span class='line'><span class="c1">//= require jquery_ujs</span>
</span><span class='line'><span class="c1">//= require bootstrap</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Batman.js and its adapters</span>
</span><span class='line'><span class="c1">//= require batman/es5-shim</span>
</span><span class='line'><span class="c1">//= require batman/batman</span>
</span><span class='line'><span class="c1">//= require batman/batman.jquery</span>
</span><span class='line'><span class="c1">//= require batman/batman.rails</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//= require batmat_blog</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//= require_tree ./models</span>
</span><span class='line'><span class="c1">//= require_tree ./controllers</span>
</span><span class='line'><span class="c1">//= require_tree ./helpers</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c1">//= require_tree .</span>
</span><span class='line'><span class="c1">// Run the Batman app</span>
</span><span class='line'><span class="nx">$</span><span class="p">(</span><span class="nb">document</span><span class="p">).</span><span class="nx">ready</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>  <span class="nx">BatmatBlog</span><span class="p">.</span><span class="nx">run</span><span class="p">();</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>因为我们需要上传文件，所以我们需要使用carrierwave来做</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">rails</span> <span class="nx">generate</span> <span class="nx">uploader</span> <span class="nx">image</span>
</span></code></pre></td></tr></table></div></figure>


<p>修改model<br/>
app/models/post.rb</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Post</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">attr_accessible</span> <span class="ss">:content</span><span class="p">,</span> <span class="ss">:image</span><span class="p">,</span> <span class="ss">:title</span>
</span><span class='line'>  <span class="n">mount_uploader</span> <span class="ss">:image</span><span class="p">,</span> <span class="no">ImageUploader</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>好了接下来我们需要进入batman，batman也为了我们准备了很多很有用生成器</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">Batman</span><span class="p">:</span>
</span><span class='line'>  <span class="ss">batman</span><span class="p">:</span><span class="n">controller</span>
</span><span class='line'>  <span class="ss">batman</span><span class="p">:</span><span class="n">helper</span>
</span><span class='line'>  <span class="ss">batman</span><span class="p">:</span><span class="n">install</span>
</span><span class='line'>  <span class="ss">batman</span><span class="p">:</span><span class="n">model</span>
</span><span class='line'>  <span class="ss">batman</span><span class="p">:</span><span class="n">scaffold</span>
</span></code></pre></td></tr></table></div></figure>


<p>我们使用batman:scaffold来创建我们需要的东西，也方便我们熟悉batman的写法</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="ss">batman</span><span class="p">:</span><span class="n">scaffold</span> <span class="n">post</span>
</span></code></pre></td></tr></table></div></figure>


<h2>batman</h2>

<p>打开app/assets/javascipts/post.js</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="k">class</span> <span class="nx">BatmatBlog</span><span class="p">.</span><span class="nx">Post</span> <span class="k">extends</span> <span class="nx">Batman</span><span class="p">.</span><span class="nx">Model</span>
</span><span class='line'>  <span class="vi">@storageKey: </span><span class="s">&#39;posts&#39;</span>
</span><span class='line'>  <span class="nx">@persist</span> <span class="nx">Batman</span><span class="p">.</span><span class="nx">RailsStorage</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">@encode</span> <span class="s">&quot;title&quot;</span><span class="p">,</span> <span class="s">&quot;content&quot;</span><span class="p">,</span> <span class="s">&quot;image&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>下面解释一下上面几个东西，因为我的英语翻译确实比较烂，所以还是直接引用英文了</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="nx">@storageKey</span> <span class="o">is</span> <span class="nx">a</span> <span class="k">class</span> <span class="nx">level</span> <span class="nx">option</span> <span class="nx">which</span> <span class="nx">gives</span> <span class="nx">the</span> <span class="nx">storage</span> <span class="nx">adapters</span> <span class="nx">something</span> <span class="nx">to</span> <span class="nx">interpolate</span> <span class="nx">into</span> <span class="nx">their</span> <span class="nx">specific</span> <span class="nx">key</span> <span class="nx">generation</span> <span class="nx">schemes</span><span class="p">.</span> <span class="nx">In</span> <span class="nx">the</span> <span class="nx">case</span> <span class="k">of</span> <span class="nx">LocalStorage</span> <span class="o">or</span> <span class="nx">SessionStorage</span> <span class="nx">adapters</span><span class="p">,</span> <span class="nx">the</span> <span class="nx">storageKey</span> <span class="nx">defines</span> <span class="nx">what</span> <span class="nx">namespace</span> <span class="nx">to</span> <span class="nx">store</span> <span class="k">this</span> <span class="nx">record</span> <span class="nx">under</span> <span class="k">in</span> <span class="nx">the</span> <span class="nx">localStorage</span> <span class="o">or</span> <span class="nx">sessionStorage</span> <span class="nx">host</span> <span class="nx">objects</span><span class="p">,</span> <span class="o">and</span> <span class="nx">with</span> <span class="nx">the</span> <span class="nx">case</span> <span class="k">of</span> <span class="nx">the</span> <span class="nx">RestStorage</span> <span class="nx">family</span> <span class="k">of</span> <span class="nx">adapters</span><span class="p">,</span> <span class="nx">the</span> <span class="nx">storageKey</span> <span class="nx">assists</span> <span class="k">in</span> <span class="nx">URL</span> <span class="nx">generation</span><span class="p">.</span> <span class="nx">See</span> <span class="nx">the</span> <span class="nx">documentation</span> <span class="k">for</span> <span class="nx">the</span> <span class="nx">storage</span> <span class="nx">adapter</span> <span class="k">of</span> <span class="nx">your</span> <span class="nx">choice</span> <span class="k">for</span> <span class="nx">more</span> <span class="nx">information</span><span class="p">.</span>
</span><span class='line'><span class="nx">The</span> <span class="nx">default</span> <span class="nx">storageKey</span> <span class="o">is</span> <span class="kc">null</span><span class="p">.</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="nx">@persist</span> <span class="o">is</span> <span class="nx">how</span> <span class="nx">a</span> <span class="nx">Model</span> <span class="nx">subclass</span> <span class="o">is</span> <span class="nx">told</span> <span class="nx">to</span> <span class="nx">persist</span> <span class="nx">itself</span> <span class="k">by</span> <span class="nx">means</span> <span class="k">of</span> <span class="nx">a</span> <span class="nx">StorageAdapter</span><span class="p">.</span> <span class="nx">@persist</span> <span class="nx">accepts</span> <span class="nx">either</span> <span class="nx">a</span> <span class="nx">StorageAdapter</span> <span class="k">class</span> <span class="o">or</span> <span class="nx">instance</span> <span class="o">and</span> <span class="nx">will</span> <span class="k">return</span> <span class="nx">either</span> <span class="nx">the</span> <span class="nx">instantiated</span> <span class="k">class</span> <span class="o">or</span> <span class="nx">the</span> <span class="nx">instance</span> <span class="nx">passed</span> <span class="nx">to</span> <span class="nx">it</span> <span class="k">for</span> <span class="nx">further</span> <span class="nx">modification</span><span class="p">.</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="nx">@encode</span> <span class="nx">specifies</span> <span class="nx">a</span> <span class="nx">list</span> <span class="k">of</span> <span class="nx">keys</span> <span class="nx">a</span> <span class="nx">model</span> <span class="nx">should</span> <span class="nx">expect</span> <span class="nx">from</span> <span class="o">and</span> <span class="nx">send</span> <span class="nx">back</span> <span class="nx">to</span> <span class="nx">a</span> <span class="nx">storage</span> <span class="nx">adapter</span><span class="p">,</span> <span class="o">and</span> <span class="nx">any</span> <span class="nx">transforms</span> <span class="nx">to</span> <span class="nx">apply</span> <span class="nx">to</span> <span class="nx">those</span> <span class="nx">attributes</span> <span class="nx">as</span> <span class="nx">they</span> <span class="nx">enter</span> <span class="o">and</span> <span class="nx">exit</span> <span class="nx">the</span> <span class="nx">world</span> <span class="k">of</span> <span class="nx">Batman</span> <span class="k">in</span> <span class="nx">the</span> <span class="nx">optional</span> <span class="nx">encoderObject</span><span class="p">.</span>
</span><span class='line'><span class="nx">The</span> <span class="nx">encoderObject</span> <span class="nx">should</span> <span class="nx">have</span> <span class="nx">an</span> <span class="nx">encode</span> <span class="o">and/or</span> <span class="nx">a</span> <span class="nx">decode</span> <span class="nx">key</span> <span class="nx">which</span> <span class="nx">point</span> <span class="nx">to</span> <span class="nx">functions</span><span class="p">.</span> <span class="nx">The</span> <span class="nx">functions</span> <span class="nx">accept</span> <span class="nx">the</span> <span class="s">&quot;raw&quot;</span> <span class="nx">data</span> <span class="p">(</span><span class="nx">the</span> <span class="nx">Batman</span> <span class="nx">land</span> <span class="nx">value</span> <span class="k">in</span> <span class="nx">the</span> <span class="nx">case</span> <span class="k">of</span> <span class="nx">encode</span><span class="p">,</span> <span class="o">and</span> <span class="nx">the</span> <span class="nx">backend</span> <span class="nx">land</span> <span class="nx">value</span> <span class="k">in</span> <span class="nx">the</span> <span class="nx">case</span> <span class="k">of</span> <span class="nx">decode</span><span class="p">),</span> <span class="o">and</span> <span class="nx">should</span> <span class="k">return</span> <span class="nx">the</span> <span class="nx">data</span> <span class="nx">suitable</span> <span class="k">for</span> <span class="nx">the</span> <span class="nx">other</span> <span class="nx">side</span> <span class="k">of</span> <span class="nx">the</span> <span class="nx">link</span><span class="p">.</span> <span class="nx">The</span> <span class="nx">functions</span> <span class="nx">should</span> <span class="nx">have</span> <span class="nx">the</span> <span class="nx">following</span> <span class="nx">signatures</span>
</span></code></pre></td></tr></table></div></figure>


<p>接下来我们进入controller</p>

<p>我们可以看到batman为我们生成了基本的index show create update</p>

<p>不过我们因为需要有一个get action来生成new和edit
所以我们加上这两个方法，代码就如下面这个样子:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="k">class</span> <span class="nx">BatmatBlog</span><span class="p">.</span><span class="nx">PostsController</span> <span class="k">extends</span> <span class="nx">Batman</span><span class="p">.</span><span class="nx">Controller</span>
</span><span class='line'>  <span class="nv">index: </span><span class="nf">(params) -&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nv">show: </span><span class="nf">(params) -&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">new</span><span class="o">:</span> <span class="nf">(params) -&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nv">create: </span><span class="nf">(params) -&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nv">edit: </span><span class="nf">(params) -&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nv">update: </span><span class="nf">(params) -&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nv">destroy: </span><span class="nf">(params) -&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>现在先放着，不写实现先，我们需要写路由了
这个时候，可以说说路由在那里实现了，我们看以我们项目名称命名的coffee文件
app/assets/javascipts/batmat_blog.js.coffee</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="nb">window</span><span class="p">.</span><span class="nv">BatmatBlog = </span><span class="k">class</span> <span class="nx">BatmatBlog</span> <span class="k">extends</span> <span class="nx">Batman</span><span class="p">.</span><span class="nx">App</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># @root &#39;controller#all&#39;</span>
</span><span class='line'>  <span class="c1"># @route &#39;/controller/:id&#39;, &#39;controller#show&#39;, resource: &#39;model&#39;, action: &#39;show&#39;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">@</span><span class="kc">on</span> <span class="s">&#39;run&#39;</span><span class="p">,</span> <span class="nf">-&gt;</span>
</span><span class='line'>    <span class="nx">console</span><span class="o">?</span><span class="p">.</span><span class="nx">log</span> <span class="s">&quot;Running ....&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">@</span><span class="kc">on</span> <span class="s">&#39;ready&#39;</span><span class="p">,</span> <span class="nf">-&gt;</span>
</span><span class='line'>    <span class="nx">console</span><span class="o">?</span><span class="p">.</span><span class="nx">log</span> <span class="s">&quot;BatmatBlog ready for use.&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="vi">@flash: </span><span class="nx">Batman</span><span class="p">()</span>
</span><span class='line'>  <span class="nx">@flash</span><span class="p">.</span><span class="nx">accessor</span>
</span><span class='line'>    <span class="nv">get: </span><span class="nf">(key) -&gt;</span> <span class="nx">@</span><span class="p">[</span><span class="nx">key</span><span class="p">]</span>
</span><span class='line'>    <span class="nv">set: </span><span class="nf">(key, value) -&gt;</span>
</span><span class='line'>      <span class="nx">@</span><span class="p">[</span><span class="nx">key</span><span class="p">]</span> <span class="o">=</span> <span class="nx">value</span>
</span><span class='line'>      <span class="k">if</span> <span class="nx">value</span> <span class="o">isnt</span> <span class="s">&#39;&#39;</span>
</span><span class='line'>        <span class="nx">setTimeout</span> <span class="o">=&gt;</span>
</span><span class='line'>          <span class="nx">@set</span><span class="p">(</span><span class="nx">key</span><span class="p">,</span> <span class="s">&#39;&#39;</span><span class="p">)</span>
</span><span class='line'>        <span class="p">,</span> <span class="mi">2000</span>
</span><span class='line'>      <span class="nx">value</span>
</span><span class='line'>
</span><span class='line'>  <span class="vi">@flashSuccess: </span><span class="nf">(message) -&gt;</span> <span class="nx">@set</span> <span class="s">&#39;flash.success&#39;</span><span class="p">,</span> <span class="nx">message</span>
</span><span class='line'>  <span class="vi">@flashError: </span><span class="nf">(message) -&gt;</span>  <span class="nx">@set</span> <span class="s">&#39;flash.error&#39;</span><span class="p">,</span> <span class="nx">message</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="nb">window</span><span class="p">.</span><span class="nv">BatmatBlog = </span><span class="k">class</span> <span class="nx">BatmatBlog</span> <span class="k">extends</span> <span class="nx">Batman</span><span class="p">.</span><span class="nx">App</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># @root &#39;controller#all&#39;</span>
</span><span class='line'>  <span class="c1"># @route &#39;/controller/:id&#39;, &#39;controller#show&#39;, resource: &#39;model&#39;, action: &#39;show&#39;</span>
</span><span class='line'>  <span class="nx">@root</span> <span class="s">&#39;posts#index&#39;</span>
</span><span class='line'>  <span class="nx">@resources</span> <span class="s">&#39;posts&#39;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nv">Batman.ViewStore.prefix = </span><span class="s">&#39;assets/views&#39;</span> <span class="c1"># 设置view目录</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">@</span><span class="kc">on</span> <span class="s">&#39;run&#39;</span><span class="p">,</span> <span class="nf">-&gt;</span>
</span><span class='line'>    <span class="nx">console</span><span class="o">?</span><span class="p">.</span><span class="nx">log</span> <span class="s">&quot;Running ....&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">@</span><span class="kc">on</span> <span class="s">&#39;ready&#39;</span><span class="p">,</span> <span class="nf">-&gt;</span>
</span><span class='line'>    <span class="nx">console</span><span class="o">?</span><span class="p">.</span><span class="nx">log</span> <span class="s">&quot;BatmatBlog ready for use.&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="vi">@flash: </span><span class="nx">Batman</span><span class="p">()</span>
</span><span class='line'>  <span class="nx">@flash</span><span class="p">.</span><span class="nx">accessor</span>
</span><span class='line'>    <span class="nv">get: </span><span class="nf">(key) -&gt;</span> <span class="nx">@</span><span class="p">[</span><span class="nx">key</span><span class="p">]</span>
</span><span class='line'>    <span class="nv">set: </span><span class="nf">(key, value) -&gt;</span>
</span><span class='line'>      <span class="nx">@</span><span class="p">[</span><span class="nx">key</span><span class="p">]</span> <span class="o">=</span> <span class="nx">value</span>
</span><span class='line'>      <span class="k">if</span> <span class="nx">value</span> <span class="o">isnt</span> <span class="s">&#39;&#39;</span>
</span><span class='line'>        <span class="nx">setTimeout</span> <span class="o">=&gt;</span>
</span><span class='line'>          <span class="nx">@set</span><span class="p">(</span><span class="nx">key</span><span class="p">,</span> <span class="s">&#39;&#39;</span><span class="p">)</span>
</span><span class='line'>        <span class="p">,</span> <span class="mi">2000</span>
</span><span class='line'>      <span class="nx">value</span>
</span><span class='line'>
</span><span class='line'>  <span class="vi">@flashSuccess: </span><span class="nf">(message) -&gt;</span> <span class="nx">@set</span> <span class="s">&#39;flash.success&#39;</span><span class="p">,</span> <span class="nx">message</span>
</span><span class='line'>  <span class="vi">@flashError: </span><span class="nf">(message) -&gt;</span>  <span class="nx">@set</span> <span class="s">&#39;flash.error&#39;</span><span class="p">,</span> <span class="nx">message</span>
</span></code></pre></td></tr></table></div></figure>


<p>好了我们来写view, 首先修改appliction.html.erb</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="cp">&lt;!DOCTYPE html&gt;</span>
</span><span class='line'><span class="nt">&lt;html&gt;</span>
</span><span class='line'><span class="nt">&lt;head&gt;</span>
</span><span class='line'>  <span class="nt">&lt;title&gt;</span>BatmatBlog<span class="nt">&lt;/title&gt;</span>
</span><span class='line'>  <span class="err">&lt;</span>%= stylesheet_link_tag    &quot;application&quot;, :media =&gt; &quot;all&quot; %&gt;
</span><span class='line'>  <span class="err">&lt;</span>%= javascript_include_tag &quot;application&quot; %&gt;
</span><span class='line'>  <span class="err">&lt;</span>%= csrf_meta_tags %&gt;
</span><span class='line'><span class="nt">&lt;/head&gt;</span>
</span><span class='line'><span class="nt">&lt;body&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;div</span> <span class="na">data-yield=</span><span class="s">&quot;main&quot;</span><span class="nt">&gt;&lt;/div&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;/body&gt;</span>
</span><span class='line'><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>这时打开主页，并打开console，看到一个错误
Uncaught DevelopmentError: Please define <code>routingKey</code> on the prototype of PostsController in order for your controller to be minification safe. batman.js:750</p>

<p>这是因为rails js会压缩，如果你压缩js的话，这个无需介意，不过我们的js需要压缩，所以我们必须在controller里面写入这一行代码,代码如下:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="k">class</span> <span class="nx">BatmatBlog</span><span class="p">.</span><span class="nx">PostsController</span> <span class="k">extends</span> <span class="nx">Batman</span><span class="p">.</span><span class="nx">Controller</span>
</span><span class='line'>
</span><span class='line'>  <span class="nv">routingKey: </span><span class="s">&quot;posts&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nv">index: </span><span class="nf">(params) -&gt;</span>
</span><span class='line'>    <span class="nx">BatmatBlog</span><span class="p">.</span><span class="nx">Post</span><span class="p">.</span><span class="nx">load</span> <span class="nf">(err, posts) =&gt;</span>
</span><span class='line'>      <span class="nx">@set</span> <span class="s">&#39;posts&#39;</span><span class="p">,</span> <span class="nx">posts</span>
</span><span class='line'>  <span class="nv">show: </span><span class="nf">(params) -&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">new</span><span class="o">:</span> <span class="nf">(params) -&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nv">create: </span><span class="nf">(params) -&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nv">edit: </span><span class="nf">(params) -&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nv">update: </span><span class="nf">(params) -&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nv">destroy: </span><span class="nf">(params) -&gt;</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<p>现在来写new的view和controller action</p>

<p>新建app/assets/javascipts/views/posts/new.html.erb</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;form</span> <span class="na">class=</span><span class="s">&quot;new-post&quot;</span> <span class="na">accept-charset=</span><span class="s">&quot;utf-8&quot;</span> <span class="na">data-event-submit=</span><span class="s">&quot;create&quot;</span> <span class="na">data-formfor-post=</span><span class="s">&quot;post&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;text&quot;</span> <span class="na">data-bind=</span><span class="s">&quot;post.title&quot;</span> <span class="na">name=</span><span class="s">&quot;post[title]&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;text&quot;</span> <span class="na">data-bind=</span><span class="s">&quot;post.content&quot;</span> <span class="na">name=</span><span class="s">&quot;post[content]&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;file&quot;</span> <span class="na">data-bind=</span><span class="s">&quot;post.image&quot;</span> <span class="na">name=</span><span class="s">&quot;post[image]&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;submit&quot;</span> <span class="na">value=</span><span class="s">&quot;save&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;/form&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>然后写new和create方法</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="k">new</span><span class="o">:</span> <span class="nf">(params) -&gt;</span>
</span><span class='line'>    <span class="nx">@set</span> <span class="s">&quot;post&quot;</span><span class="p">,</span> <span class="k">new</span> <span class="nx">BatmatBlog</span><span class="p">.</span><span class="nx">Post</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>  <span class="nv">create: </span><span class="nf">(params) -&gt;</span>
</span><span class='line'>    <span class="nx">@get</span><span class="p">(</span><span class="s">&#39;post&#39;</span><span class="p">).</span><span class="nx">save</span> <span class="nf">(err) =&gt;</span>
</span><span class='line'>      <span class="k">if</span> <span class="nx">err</span>
</span><span class='line'>        <span class="c1"># 做一些错误处理</span>
</span><span class='line'>        <span class="k">throw</span> <span class="nx">err</span>
</span><span class='line'>      <span class="k">else</span>
</span><span class='line'>        <span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByName</span><span class="p">(</span><span class="s">&quot;post[image]&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">].</span><span class="nv">value = </span><span class="s">&quot;&quot;</span> <span class="c1"># 因为图片上传之后，你再次新建的时候记录还是在的，所以我们要手动清楚掉</span>
</span></code></pre></td></tr></table></div></figure>


<p>现在我们写index的view<br/>
app/assets/javascipts/posts/index.html.erb</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;div</span> <span class="na">data-foreach-post=</span><span class="s">&quot;posts&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;div&gt;</span>
</span><span class='line'>    <span class="nt">&lt;p</span> <span class="na">data-bind=</span><span class="s">&quot;post.title&quot;</span><span class="nt">&gt;&lt;/p&gt;</span>
</span><span class='line'>    <span class="nt">&lt;a</span> <span class="na">data-route=</span><span class="s">&quot;routes.posts[post]&quot;</span><span class="nt">&gt;</span>show<span class="nt">&lt;/a&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/div&gt;</span>
</span><span class='line'><span class="nt">&lt;/div&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;a</span> <span class="na">data-route=</span><span class="s">&quot;routes.posts.new&quot;</span><span class="nt">&gt;</span>new<span class="nt">&lt;/a&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>好了想在写show的view<br/>
app/assets/javascipts/posts/show.html.erb</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;p</span> <span class="na">data-bind=</span><span class="s">&quot;post.title&quot;</span><span class="nt">&gt;&lt;/p&gt;</span>
</span><span class='line'><span class="nt">&lt;p</span> <span class="na">data-bind=</span><span class="s">&quot;post.content&quot;</span><span class="nt">&gt;&lt;/p&gt;</span>
</span><span class='line'><span class="nt">&lt;img</span> <span class="na">data-bind-src=</span><span class="s">&quot;post.image.url&quot;</span> <span class="na">alt=</span><span class="s">&quot;&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;a</span> <span class="na">data-route=</span><span class="s">&quot;routes.posts&quot;</span><span class="nt">&gt;</span>back<span class="nt">&lt;/a&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>补写controller
app/assets/javascipt/controller/posts_controller.js.coffee</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="nv">show: </span><span class="nf">(params) -&gt;</span>
</span><span class='line'>  <span class="nx">@set</span> <span class="s">&quot;post&quot;</span><span class="p">,</span> <span class="nx">BatmatBlog</span><span class="p">.</span><span class="nx">Post</span><span class="p">.</span><span class="nx">find</span> <span class="nx">params</span><span class="p">.</span><span class="nx">id</span><span class="p">,</span> <span class="nf">(err, post) =&gt;</span>
</span><span class='line'>    <span class="k">throw</span> <span class="nx">err</span> <span class="k">if</span> <span class="nx">err</span>
</span></code></pre></td></tr></table></div></figure>


<p>现在打开浏览器看看，我们的基本样子就出来了，下一篇将介绍用户登陆，和美化，这篇就到这里</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[mac os 10.8 的rvm注意事项]]></title>
    <link href="http://mjason.github.com/blog/2013/02/21/mac-os-10-dot-8-de-rvmzhu-yi-shi-xiang/"/>
    <updated>2013-02-21T15:23:00+08:00</updated>
    <id>http://mjason.github.com/blog/2013/02/21/mac-os-10-dot-8-de-rvmzhu-yi-shi-xiang</id>
    <content type="html"><![CDATA[<p>因为xcode4.6把系统的gcc版本改成了llvm，如果没有设置好的话，在安装gem和rubu的时候会出错
下面是解决办法</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>brew update
</span><span class='line'>brew tap homebrew/dupes
</span><span class='line'>brew install apple-gcc42
</span><span class='line'>rvm get stable</span></code></pre></td></tr></table></div></figure>


<p>edit ~/.zshrc</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>export CC=gcc-4.2</span></code></pre></td></tr></table></div></figure>


<p>install ruby</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rvm install ruby-1.9.3 --enable-shared --without-tk --without-tcl</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[如何在model使用view和controller里面的方法]]></title>
    <link href="http://mjason.github.com/blog/2013/02/21/ru-he-zai-modelshi-yong-viewhe-controllerli-mian-de-fang-fa/"/>
    <updated>2013-02-21T12:02:00+08:00</updated>
    <id>http://mjason.github.com/blog/2013/02/21/ru-he-zai-modelshi-yong-viewhe-controllerli-mian-de-fang-fa</id>
    <content type="html"><![CDATA[<p>当在些model的时候我们很多时候需要使用一些在hepler方法或者其他，model是使用不了这些的，一般是通过传变量来解决，可是这样的话，总是感觉怪怪的</p>

<p>这个时候可以使用线程来达到我们需要的东西</p>

<p>下面以在model使用devise的current_user为例说明如何使用</p>

<p>在ApplicationController里面写入一个方法</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">before_filter</span> <span class="ss">:set_request_environment</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">private</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">set_request_environment</span>
</span><span class='line'>    <span class="no">Thread</span><span class="o">.</span><span class="n">current</span><span class="o">[</span><span class="ss">:current_user</span><span class="o">]</span> <span class="o">=</span> <span class="n">current_user</span> <span class="k">if</span> <span class="n">current_user</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>在model里面就可以访问到这个线程的内容</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">is_teacher?</span>
</span><span class='line'>    <span class="k">if</span> <span class="no">Thread</span><span class="o">.</span><span class="n">current</span><span class="o">[</span><span class="ss">:current_user</span><span class="o">]</span> <span class="o">==</span> <span class="n">teacher</span>
</span><span class='line'>      <span class="k">return</span> <span class="kp">true</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="k">return</span> <span class="kp">false</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[mac 下的vim 美化（iterm2 zsh Powerline）]]></title>
    <link href="http://mjason.github.com/blog/2013/02/08/mac-xia-de-vim-mei-hua-%28iterm2-zsh-powerline%29/"/>
    <updated>2013-02-08T19:29:00+08:00</updated>
    <id>http://mjason.github.com/blog/2013/02/08/mac-xia-de-vim-mei-hua-(iterm2-zsh-powerline)</id>
    <content type="html"><![CDATA[<p>因为近期一直在写前端，在自己喜欢的emacs下写比较麻烦，所以配置一些vim来写前端</p>

<h3>1. 安装oh-my-zsh(这个强大的东西作为一个ruby开发者怎么可以没有)</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>curl -L https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh | sh
</span></code></pre></td></tr></table></div></figure>


<p>并在.zshrc 里面添加或修改ZSH_THEME为ZSH_THEME=&#8221;agnoster&#8221;<br/>
note: 以后需要添加或者修改环境变量的时候记得要在~/.zshrc 里面做</p>

<h3>2. 配置好看的主题和字体</h3>

<ol>
<li>下载并安装需要用到的字体，下载地址如下
https://gist.github.com/qrush/1595572/raw/417a3fa36e35ca91d6d23ac961071094c26e5fad/Menlo-Powerline.otf</li>
<li>在iterm2里面配置好字体preferences > profiles > text > Non-ASCll font 改为刚刚安装上去的字体</li>
<li>配置正确的显示色彩 preferences > profiles > Terminal
将Report Terminal Type: 选择为xterm-256color <br>
并且勾上Set locale variables automatically</li>
</ol>


<h3>3. 配置vim</h3>

<ol>
<li>安装插件pathogen（用来管理vim的插件的）</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mkdir -p ~/.vim/autoload ~/.vim/bundle; <span class="se">\</span>
</span><span class='line'>curl -Sso ~/.vim/autoload/pathogen.vim <span class="se">\</span>
</span><span class='line'>    https://raw.github.com/tpope/vim-pathogen/master/autoload/pathogen.vim
</span></code></pre></td></tr></table></div></figure>


<p>配置插件<br/>
打开vim ~/.vimrc<br/>
将execute pathogen#infect()添加加在第一行</p>

<h3>4. 安装vim-powerline</h3>

<p>这个插件必须安装，一个很好vim状态栏</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd</span> ~/.vim/bundle
</span><span class='line'>git clone https://github.com/Lokaltog/vim-powerline.git
</span></code></pre></td></tr></table></div></figure>


<h3>5.打开状态栏</h3>

<p>将set laststatus=2 添加到 ~/.vimrc 里面</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[golang 部署小技巧]]></title>
    <link href="http://mjason.github.com/blog/2013/02/04/golang-bu-shu-xiao-ji-qiao/"/>
    <updated>2013-02-04T19:51:00+08:00</updated>
    <id>http://mjason.github.com/blog/2013/02/04/golang-bu-shu-xiao-ji-qiao</id>
    <content type="html"><![CDATA[<p>golang的部署是很简单的事情，记录我这几天用到的部署技巧</p>

<p>如果你是第一次进行交叉编译， 那么执行下面的操作</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">cd</span> /usr/local/go/src
</span><span class='line'><span class="nv">$ CGO_ENABLED</span><span class="o">=</span>0 <span class="nv">GOOS</span><span class="o">=</span>linux <span class="nv">GOARCH</span><span class="o">=</span>amd64 ./make.bash
</span></code></pre></td></tr></table></div></figure>


<p>然后运行</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">CGO_ENABLED</span><span class="o">=</span>0 <span class="nv">GOOS</span><span class="o">=</span>linux <span class="nv">GOARCH</span><span class="o">=</span>amd64 go build xxx.go
</span></code></pre></td></tr></table></div></figure>


<p>之后把编译好的文件发到服务器就好了</p>

<p>下面配置upstart把项目启动
sudo vim /etc/init/xxx.conf</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>description     <span class="s2">&quot;xxx&quot;</span>
</span><span class='line'>author          <span class="s2">&quot;mjason&quot;</span>
</span><span class='line'>
</span><span class='line'>start on <span class="o">(</span>net-device-up
</span><span class='line'>          and <span class="nb">local</span>-filesystems
</span><span class='line'>          and runlevel <span class="o">[</span>2345<span class="o">])</span>
</span><span class='line'>
</span><span class='line'>stop on runlevel <span class="o">[</span>016<span class="o">]</span>
</span><span class='line'>
</span><span class='line'>respawn
</span><span class='line'>
</span><span class='line'><span class="nb">exec</span> /path/file
</span></code></pre></td></tr></table></div></figure>


<p>最后使用sudo service xxx start</p>

<p>大功告成</p>

<p>然后用server</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ios学习笔记1--cocoapods]]></title>
    <link href="http://mjason.github.com/blog/2013/01/31/iosxue-xi-bi-ji-1-cocoapods/"/>
    <updated>2013-01-31T19:07:00+08:00</updated>
    <id>http://mjason.github.com/blog/2013/01/31/iosxue-xi-bi-ji-1-cocoapods</id>
    <content type="html"><![CDATA[<h3>认识工具</h3>

<p>在开发ios过程中不可避免要使用第三方的开发库，对于习惯了ruby，golang，python等编程语言的人来说安装这些东西无疑是痛苦的，总结起来步骤就有一下几个<br></p>

<ol>
<li>下载源码</li>
<li>根据第三方库的文档进行项目设置</li>
<li>然后解决掉各种可能会出现的错误</li>
</ol>


<p>遇到新的项目继续上面的工作，这是没办法忍受的事情，好在ios的黑客都是非常酷的人，他们开发出了像ruby的bundley一样方便的东西名字叫做<a href="http://cocoapods.org/" title="cocoapods">cocoapods</a></p>

<p>因为某些原因官网上不了，请各位看官自备梯子。</p>

<h3>安装cocoapods</h3>

<ol>
<li>首先你要安装好ruby，这个网上有很多，这里我就直接写出命令给各位了</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#安装rvm,并安装ruby，在mac下只需要用下面一条命令</span>
</span><span class='line'>curl -L https://get.rvm.io | bash -s stable --ruby
</span></code></pre></td></tr></table></div></figure>


<ol>
<li>安装cocoapods</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gem gem install cocoapods
</span></code></pre></td></tr></table></div></figure>


<ol>
<li>好了之后，请进入你的ios项目里面新建一个名字叫做的Podfile的文件，在文件里面写入类似下面的文本</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">platform</span> <span class="ss">:ios</span><span class="p">,</span> <span class="s1">&#39;5.0&#39;</span>
</span><span class='line'><span class="n">pod</span> <span class="s1">&#39;AFNetworking&#39;</span><span class="p">,</span> <span class="s1">&#39;~&gt;1.1.0&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p><em>注解一下：第一版是说明你使用ios的库，并使用5.0的sdk<br>
第二行就是你的需要用的库，格式是pod &#8216;库的名称&#8217;, &#8216;版本号&#8217;</em><br>
4.使用pod install进行安装库，安装完毕之后是使用项目目录下的xxx.xcworkspace进行编程就可以了</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[移动api设计注意事项]]></title>
    <link href="http://mjason.github.com/blog/2013/01/29/gei-xue-xi-opa%5B%3F%5D-ge-jie-kou/"/>
    <updated>2013-01-29T21:35:00+08:00</updated>
    <id>http://mjason.github.com/blog/2013/01/29/gei-xue-xi-opa[?]-ge-jie-kou</id>
    <content type="html"><![CDATA[<p>工作室的星星，近期用nodejs写了一套api，看了源码和实现之后，发现有几点十分值得我学习的,</p>

<p>记录如下：</p>

<p>不要把token值放到url里面，原因很简单服务器日志一般会记录这些东西，有风险，把他放到http header上面去是一个好的选择</p>

<p>把系统进行切分：
我们把系统分成了3个部分，每一部分都有forever单独启动，这样，对于我们持续部署是有很大的好处的</p>

<p>瞎扯完毕，继续工作</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[golang解析网页入门]]></title>
    <link href="http://mjason.github.com/blog/2013/01/29/golangjie-xi-wang-ye-ru-men/"/>
    <updated>2013-01-29T09:17:00+08:00</updated>
    <id>http://mjason.github.com/blog/2013/01/29/golangjie-xi-wang-ye-ru-men</id>
    <content type="html"><![CDATA[<p>这段有个小任务，需要写一个爬虫，进行数据的分析
原本使用ruby写，可是目标网站需要多重的跳转，造成网络io延时很高，分析一次目标网站都需要10秒甚者更长。</p>

<p>这两天使用golang重写，把计算负责的和高io延时的全部并发出去，时间从原来的10秒降低到现在的3秒多一些。</p>

<p>使用的golang的库是goquery
下载方式是：
go get github.com/PuerkitoBio/goquery</p>

<p>使用这个库需要使用golang的exp库
下载这个库的方法是：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>% <span class="nb">cd</span> <span class="nv">$GOPATH</span>/src
</span><span class='line'>% hg clone https://code.google.com/p/go go-exp
</span><span class='line'>requesting all changes
</span><span class='line'>adding changesets
</span><span class='line'>adding manifests
</span><span class='line'>adding file changes
</span><span class='line'>added 13323 changesets with 50185 changes to 7251 files <span class="o">(</span>+5 heads<span class="o">)</span>
</span><span class='line'>updating to branch default
</span><span class='line'>3464 files updated, 0 files merged, 0 files removed, 0 files unresolved
</span><span class='line'>% mv go-exp/src/pkg/exp .
</span><span class='line'>% rm -rf go-exp
</span><span class='line'>% go install exp/...
</span><span class='line'>%
</span></code></pre></td></tr></table></div></figure>


<p>使用这个goquery可以像jquery那样去分析dom</p>

<p>官方的doc可以打开自己本地的
godoc -http=&#8221;:9090&#8221;
查看
也可以到godoc网站去看</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rails_admin的权限控制]]></title>
    <link href="http://mjason.github.com/blog/2013/01/14/rails-adminde-quan-xian-kong-zhi/"/>
    <updated>2013-01-14T14:32:00+08:00</updated>
    <id>http://mjason.github.com/blog/2013/01/14/rails-adminde-quan-xian-kong-zhi</id>
    <content type="html"><![CDATA[<p>rails_admin的权限控制中心</p>

<p>先在rails_admin的配置文件写入</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">RailsAdmin</span><span class="o">.</span><span class="n">config</span> <span class="k">do</span> <span class="o">|</span><span class="n">config</span><span class="o">|</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">authorize_with</span> <span class="ss">:cancan</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>之后使用rails 生成器生成cancan的控制文件,编辑文件</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Ability</span>
</span><span class='line'>  <span class="kp">include</span> <span class="ss">CanCan</span><span class="p">:</span><span class="ss">:Ability</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
</span><span class='line'>    <span class="n">user</span> <span class="o">||=</span> <span class="no">User</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">user</span> <span class="o">&amp;&amp;</span> <span class="n">user</span><span class="o">.</span><span class="n">is_superadmin?</span>
</span><span class='line'>      <span class="n">can</span> <span class="ss">:access</span><span class="p">,</span> <span class="ss">:rails_admin</span>   <span class="c1">#打开路由</span>
</span><span class='line'>      <span class="n">can</span> <span class="ss">:dashboard</span>   <span class="c1">#打开统计表</span>
</span><span class='line'>      <span class="n">can</span> <span class="ss">:manage</span><span class="p">,</span> <span class="ss">:all</span> <span class="c1">#这个角色可以读取所有的表</span>
</span><span class='line'>    <span class="k">elsif</span> <span class="n">user</span><span class="o">.</span><span class="n">is_admin?</span>
</span><span class='line'>      <span class="n">can</span> <span class="ss">:access</span><span class="p">,</span> <span class="ss">:rails_admin</span>
</span><span class='line'>      <span class="n">can</span> <span class="ss">:dashboard</span>
</span><span class='line'>      <span class="n">can</span> <span class="ss">:manage</span><span class="p">,</span> <span class="o">[</span><span class="no">Person</span><span class="o">]</span> <span class="c1"># 这个用户只能管理这个模型</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[简单的rails部署]]></title>
    <link href="http://mjason.github.com/blog/2013/01/08/jian-dan-de-railsbu-shu/"/>
    <updated>2013-01-08T22:37:00+08:00</updated>
    <id>http://mjason.github.com/blog/2013/01/08/jian-dan-de-railsbu-shu</id>
    <content type="html"><![CDATA[<p>rails的部署现在最流行的肯定是capistrano
刚开始学习的rails的时候，我也是用这个方式部署，不过每一次写部署脚本太伤了，各种错误，各种调试</p>

<p>自从有一次在ruby-toolbox看到了mina，终于有点感觉得到解救了</p>

<p>根据自己的使用mina的特点主要有：</p>

<ol>
<li>更加简洁的写法</li>
<li>更加友好的提示界面</li>
</ol>


<p>所以部署方式现在采用的是（rvm + mina + unicorn)</p>

<p>这里详细记录操作步骤</p>

<h3>安装mina</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#in Gemfile</span>
</span><span class='line'>
</span><span class='line'><span class="n">group</span> <span class="ss">:development</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;mina&#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>初始化mina 配置文件</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#cd your app project dir</span>
</span><span class='line'><span class="n">bundle</span>
</span><span class='line'><span class="n">mina</span> <span class="n">init</span>
</span></code></pre></td></tr></table></div></figure>


<h3>配置mina文件</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;mina/bundler&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;mina/rails&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;mina/git&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;mina/rvm&#39;</span>    <span class="c1"># for rvm support. (http://rvm.io)</span>
</span><span class='line'>
</span><span class='line'><span class="n">set</span> <span class="ss">:domain</span><span class="p">,</span> <span class="s1">&#39;foobar.com&#39;</span> <span class="c1">#设置你的服务ip地址，或者域名</span>
</span><span class='line'><span class="n">set</span> <span class="ss">:deploy_to</span><span class="p">,</span> <span class="s1">&#39;/var/www/foobar.com&#39;</span> <span class="c1">#部署的文件目录</span>
</span><span class='line'><span class="n">set</span> <span class="ss">:repository</span><span class="p">,</span> <span class="s1">&#39;git://...&#39;</span> <span class="c1"># git 地址</span>
</span><span class='line'><span class="n">set</span> <span class="ss">:branch</span><span class="p">,</span> <span class="s1">&#39;master&#39;</span> <span class="c1"># 确定分支</span>
</span><span class='line'>
</span><span class='line'><span class="n">set</span> <span class="ss">:shared_paths</span><span class="p">,</span> <span class="o">[</span><span class="s1">&#39;config/database.yml&#39;</span><span class="p">,</span> <span class="s1">&#39;log&#39;</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Optional settings:</span>
</span><span class='line'><span class="n">set</span> <span class="ss">:user</span><span class="p">,</span> <span class="s1">&#39;foobar&#39;</span>    <span class="c1"># ssh 用的用户名.</span>
</span><span class='line'><span class="c1">#   set :port, &#39;30000&#39;     # SSH 端口，默认22.</span>
</span><span class='line'>
</span><span class='line'><span class="n">task</span> <span class="ss">:environment</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">invoke</span> <span class="ss">:&#39;rvm:use[ruby-1.9.3-p125@default]&#39;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#mina setup 时会执行的操作</span>
</span><span class='line'><span class="n">task</span> <span class="ss">:setup</span> <span class="o">=&gt;</span> <span class="ss">:environment</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">queue!</span> <span class="sx">%[mkdir -p &quot;</span><span class="si">#{</span><span class="n">deploy_to</span><span class="si">}</span><span class="sx">/shared/log&quot;]</span> <span class="c1"># 创建日志目录</span>
</span><span class='line'>  <span class="n">queue!</span> <span class="sx">%[chmod g+rx,u+rwx &quot;</span><span class="si">#{</span><span class="n">deploy_to</span><span class="si">}</span><span class="sx">/shared/log&quot;]</span> <span class="c1"># 设置日志目录的权限</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">queue!</span> <span class="sx">%[mkdir -p &quot;</span><span class="si">#{</span><span class="n">deploy_to</span><span class="si">}</span><span class="sx">/shared/config&quot;]</span> <span class="c1">#创建目录</span>
</span><span class='line'>  <span class="n">queue!</span> <span class="sx">%[chmod g+rx,u+rwx &quot;</span><span class="si">#{</span><span class="n">deploy_to</span><span class="si">}</span><span class="sx">/shared/config&quot;]</span> <span class="c1"># 目录权限设置</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">queue!</span> <span class="sx">%[touch &quot;</span><span class="si">#{</span><span class="n">deploy_to</span><span class="si">}</span><span class="sx">/shared/config/database.yml&quot;]</span> <span class="c1"># 生成服务器的database.yml</span>
</span><span class='line'>  <span class="n">queue</span>  <span class="sx">%[-----&gt; Be sure to edit &#39;shared/config/database.yml&#39;.]</span> <span class="c1">#提示编辑服务器的database.yml， 可以删除 </span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 进行mina deploy会进行的操作</span>
</span><span class='line'><span class="n">desc</span> <span class="s2">&quot;Deploys the current version to the server.&quot;</span>
</span><span class='line'><span class="n">task</span> <span class="ss">:deploy</span> <span class="o">=&gt;</span> <span class="ss">:environment</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">deploy</span> <span class="k">do</span>
</span><span class='line'>    <span class="c1"># Put things that will set up an empty directory into a fully set-up</span>
</span><span class='line'>    <span class="c1"># instance of your project.</span>
</span><span class='line'>    <span class="n">invoke</span> <span class="ss">:&#39;git:clone&#39;</span>
</span><span class='line'>    <span class="n">invoke</span> <span class="ss">:&#39;deploy:link_shared_paths&#39;</span>
</span><span class='line'>    <span class="n">invoke</span> <span class="ss">:&#39;bundle:install&#39;</span>
</span><span class='line'>    <span class="n">invoke</span> <span class="ss">:&#39;rails:db_migrate&#39;</span>
</span><span class='line'>    <span class="n">invoke</span> <span class="ss">:&#39;rails:assets_precompile&#39;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">to</span> <span class="ss">:launch</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">queue</span> <span class="s1">&#39;touch tmp/restart.txt&#39;</span> <span class="c1"># 服务器重启服务器用的</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>根据自己的项目和服务器信息进行设置之后运行</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># 服务器目录初始化</span>
</span><span class='line'><span class="n">mina</span> <span class="n">setup</span>
</span><span class='line'><span class="c1"># 进行项目部署</span>
</span><span class='line'><span class="n">mina</span> <span class="n">deploy</span>
</span></code></pre></td></tr></table></div></figure>


<p>这样第一步就完成了</p>

<p>ssh 登录进服务器
然后建立一个专门用来部署的用户，安装rvm和ruby
网上的方法很多，这里就直接贴命令了,基于ubuntu12.04</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">ssh</span> <span class="n">root</span><span class="vi">@ip</span>
</span><span class='line'><span class="n">adduser</span> <span class="n">deploy</span>
</span><span class='line'><span class="n">su</span> <span class="n">deploy</span>
</span><span class='line'><span class="n">curl</span> <span class="o">-</span><span class="n">L</span> <span class="ss">https</span><span class="p">:</span><span class="sr">//</span><span class="n">get</span><span class="o">.</span><span class="n">rvm</span><span class="o">.</span><span class="n">io</span> <span class="o">|</span> <span class="n">bash</span> <span class="o">-</span><span class="n">s</span> <span class="n">stable</span>
</span><span class='line'><span class="c1"># 安装rvm的依赖</span>
</span><span class='line'><span class="n">rvm</span> <span class="n">requirements</span>
</span><span class='line'><span class="n">rvm</span> <span class="n">install</span> <span class="mi">1</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">3</span>
</span><span class='line'><span class="n">rvm</span> <span class="n">use</span> <span class="mi">1</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">3</span>
</span><span class='line'><span class="n">gem</span> <span class="n">install</span> <span class="n">unicorn</span>
</span><span class='line'><span class="c1"># bootup可以自由写，推荐写项目名称</span>
</span><span class='line'><span class="n">rvm</span> <span class="n">wrapper</span> <span class="n">ruby</span><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">3</span> <span class="n">bootup</span> <span class="n">unicorn_rails</span>
</span><span class='line'><span class="n">vim</span> <span class="vg">$HOME</span><span class="o">/.</span><span class="n">rvm</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">bootup_unicorn_rails</span>
</span></code></pre></td></tr></table></div></figure>


<p>因为mina的gem是安装在项目的vendor/bundle下面
所以需要修改一下rvm自动生成的脚本
将文件中的unicorn_rails 改为 你的项目地址+current/bin/unicorn_rails
eg: /home/deploy/test1/current/bin/unicorn_rails</p>

<p>接下来就是写启动脚本了，我的shell是以Ruby China的mimosa配置写的，这里就不重复<br>
直接贴上原帖地址和git地址 <br>
原帖地址：http://ruby-china.org/topics/471<br>
他提供的git地址: https://gist.github.com/3547765<br></p>

<p>收工！！！</p>
]]></content>
  </entry>
  
</feed>

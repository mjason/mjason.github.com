<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[天涯望帆]]></title>
  <link href="http://mjason.github.com/atom.xml" rel="self"/>
  <link href="http://mjason.github.com/"/>
  <updated>2013-02-08T19:52:51+08:00</updated>
  <id>http://mjason.github.com/</id>
  <author>
    <name><![CDATA[MJ（天涯望帆）]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[mac 下的vim 美化（iterm2 zsh Powerline）]]></title>
    <link href="http://mjason.github.com/blog/2013/02/08/mac-xia-de-vim-mei-hua-%28iterm2-zsh-powerline%29/"/>
    <updated>2013-02-08T19:29:00+08:00</updated>
    <id>http://mjason.github.com/blog/2013/02/08/mac-xia-de-vim-mei-hua-(iterm2-zsh-powerline)</id>
    <content type="html"><![CDATA[<p>因为近期一直在写前端，在自己喜欢的emacs下写比较麻烦，所以配置一些vim来写前端</p>

<h3>1. 安装oh-my-zsh(这个强大的东西作为一个ruby开发者怎么可以没有)</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>curl -L https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh | sh
</span></code></pre></td></tr></table></div></figure>


<p>note: 以后需要添加或者修改环境变量的时候记得要在~/.zshrc 里面做</p>

<h3>2. 配置好看的主题和字体</h3>

<ol>
<li>下载并安装需要用到的字体，下载地址如下
https://gist.github.com/qrush/1595572/raw/417a3fa36e35ca91d6d23ac961071094c26e5fad/Menlo-Powerline.otf</li>
<li>在iterm2里面配置好字体preferences > profiles > text > Non-ASCll font 改为刚刚安装上去的字体</li>
<li>配置正确的显示色彩 preferences > profiles > Terminal
将Report Terminal Type: 选择为xterm-256color <br>
并且勾上Set locale variables automatically</li>
</ol>


<h3>3. 配置vim</h3>

<ol>
<li>安装插件pathogen（用来管理vim的插件的）</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mkdir -p ~/.vim/autoload ~/.vim/bundle; <span class="se">\</span>
</span><span class='line'>curl -Sso ~/.vim/autoload/pathogen.vim <span class="se">\</span>
</span><span class='line'>    https://raw.github.com/tpope/vim-pathogen/master/autoload/pathogen.vim
</span></code></pre></td></tr></table></div></figure>


<p>配置插件<br/>
打开vim ~/.vimrc<br/>
将execute pathogen#infect()添加加在第一行</p>

<h3>4. 安装vim-powerline</h3>

<p>这个插件必须安装，一个很好vim状态栏</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd</span> ~/.vim/bundle
</span><span class='line'>git clone https://github.com/Lokaltog/vim-powerline.git
</span></code></pre></td></tr></table></div></figure>


<h3>5.打开状态栏</h3>

<p>将set laststatus=2 添加到 ~/.vimrc 里面</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[golang 部署小技巧]]></title>
    <link href="http://mjason.github.com/blog/2013/02/04/golang-bu-shu-xiao-ji-qiao/"/>
    <updated>2013-02-04T19:51:00+08:00</updated>
    <id>http://mjason.github.com/blog/2013/02/04/golang-bu-shu-xiao-ji-qiao</id>
    <content type="html"><![CDATA[<p>golang的部署是很简单的事情，记录我这几天用到的部署技巧</p>

<p>如果你是第一次进行交叉编译， 那么执行下面的操作</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">cd</span> /usr/local/go/src
</span><span class='line'><span class="nv">$ CGO_ENABLED</span><span class="o">=</span>0 <span class="nv">GOOS</span><span class="o">=</span>linux <span class="nv">GOARCH</span><span class="o">=</span>amd64 ./make.bash
</span></code></pre></td></tr></table></div></figure>


<p>然后运行</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">CGO_ENABLED</span><span class="o">=</span>0 <span class="nv">GOOS</span><span class="o">=</span>linux <span class="nv">GOARCH</span><span class="o">=</span>amd64 go build xxx.go
</span></code></pre></td></tr></table></div></figure>


<p>之后把编译好的文件发到服务器就好了</p>

<p>下面配置upstart把项目启动
sudo vim /etc/init/xxx.conf</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>description     <span class="s2">&quot;xxx&quot;</span>
</span><span class='line'>author          <span class="s2">&quot;mjason&quot;</span>
</span><span class='line'>
</span><span class='line'>start on <span class="o">(</span>net-device-up
</span><span class='line'>          and <span class="nb">local</span>-filesystems
</span><span class='line'>          and runlevel <span class="o">[</span>2345<span class="o">])</span>
</span><span class='line'>
</span><span class='line'>stop on runlevel <span class="o">[</span>016<span class="o">]</span>
</span><span class='line'>
</span><span class='line'>respawn
</span><span class='line'>
</span><span class='line'><span class="nb">exec</span> /path/file
</span></code></pre></td></tr></table></div></figure>


<p>最后使用sudo service xxx start</p>

<p>大功告成</p>

<p>然后用server</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ios学习笔记1--cocoapods]]></title>
    <link href="http://mjason.github.com/blog/2013/01/31/iosxue-xi-bi-ji-1-cocoapods/"/>
    <updated>2013-01-31T19:07:00+08:00</updated>
    <id>http://mjason.github.com/blog/2013/01/31/iosxue-xi-bi-ji-1-cocoapods</id>
    <content type="html"><![CDATA[<h3>认识工具</h3>

<p>在开发ios过程中不可避免要使用第三方的开发库，对于习惯了ruby，golang，python等编程语言的人来说安装这些东西无疑是痛苦的，总结起来步骤就有一下几个<br></p>

<ol>
<li>下载源码</li>
<li>根据第三方库的文档进行项目设置</li>
<li>然后解决掉各种可能会出现的错误</li>
</ol>


<p>遇到新的项目继续上面的工作，这是没办法忍受的事情，好在ios的黑客都是非常酷的人，他们开发出了像ruby的bundley一样方便的东西名字叫做<a href="http://cocoapods.org/" title="cocoapods">cocoapods</a></p>

<p>因为某些原因官网上不了，请各位看官自备梯子。</p>

<h3>安装cocoapods</h3>

<ol>
<li>首先你要安装好ruby，这个网上有很多，这里我就直接写出命令给各位了</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#安装rvm,并安装ruby，在mac下只需要用下面一条命令</span>
</span><span class='line'>curl -L https://get.rvm.io | bash -s stable --ruby
</span></code></pre></td></tr></table></div></figure>


<ol>
<li>安装cocoapods</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gem gem install cocoapods
</span></code></pre></td></tr></table></div></figure>


<ol>
<li>好了之后，请进入你的ios项目里面新建一个名字叫做的Podfile的文件，在文件里面写入类似下面的文本</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">platform</span> <span class="ss">:ios</span><span class="p">,</span> <span class="s1">&#39;5.0&#39;</span>
</span><span class='line'><span class="n">pod</span> <span class="s1">&#39;AFNetworking&#39;</span><span class="p">,</span> <span class="s1">&#39;~&gt;1.1.0&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p><em>注解一下：第一版是说明你使用ios的库，并使用5.0的sdk<br>
第二行就是你的需要用的库，格式是pod &#8216;库的名称&#8217;, &#8216;版本号&#8217;</em><br>
4.使用pod install进行安装库，安装完毕之后是使用项目目录下的xxx.xcworkspace进行编程就可以了</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[移动api设计注意事项]]></title>
    <link href="http://mjason.github.com/blog/2013/01/29/gei-xue-xi-opa%5B%3F%5D-ge-jie-kou/"/>
    <updated>2013-01-29T21:35:00+08:00</updated>
    <id>http://mjason.github.com/blog/2013/01/29/gei-xue-xi-opa[?]-ge-jie-kou</id>
    <content type="html"><![CDATA[<p>工作室的星星，近期用nodejs写了一套api，看了源码和实现之后，发现有几点十分值得我学习的,</p>

<p>记录如下：</p>

<p>不要把token值放到url里面，原因很简单服务器日志一般会记录这些东西，有风险，把他放到http header上面去是一个好的选择</p>

<p>把系统进行切分：
我们把系统分成了3个部分，每一部分都有forever单独启动，这样，对于我们持续部署是有很大的好处的</p>

<p>瞎扯完毕，继续工作</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[golang解析网页入门]]></title>
    <link href="http://mjason.github.com/blog/2013/01/29/golangjie-xi-wang-ye-ru-men/"/>
    <updated>2013-01-29T09:17:00+08:00</updated>
    <id>http://mjason.github.com/blog/2013/01/29/golangjie-xi-wang-ye-ru-men</id>
    <content type="html"><![CDATA[<p>这段有个小任务，需要写一个爬虫，进行数据的分析
原本使用ruby写，可是目标网站需要多重的跳转，造成网络io延时很高，分析一次目标网站都需要10秒甚者更长。</p>

<p>这两天使用golang重写，把计算负责的和高io延时的全部并发出去，时间从原来的10秒降低到现在的3秒多一些。</p>

<p>使用的golang的库是goquery
下载方式是：
go get github.com/PuerkitoBio/goquery</p>

<p>使用这个库需要使用golang的exp库
下载这个库的方法是：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>% <span class="nb">cd</span> <span class="nv">$GOPATH</span>/src
</span><span class='line'>% hg clone https://code.google.com/p/go go-exp
</span><span class='line'>requesting all changes
</span><span class='line'>adding changesets
</span><span class='line'>adding manifests
</span><span class='line'>adding file changes
</span><span class='line'>added 13323 changesets with 50185 changes to 7251 files <span class="o">(</span>+5 heads<span class="o">)</span>
</span><span class='line'>updating to branch default
</span><span class='line'>3464 files updated, 0 files merged, 0 files removed, 0 files unresolved
</span><span class='line'>% mv go-exp/src/pkg/exp .
</span><span class='line'>% rm -rf go-exp
</span><span class='line'>% go install exp/...
</span><span class='line'>%
</span></code></pre></td></tr></table></div></figure>


<p>使用这个goquery可以像jquery那样去分析dom</p>

<p>官方的doc可以打开自己本地的
godoc -http=&#8221;:9090&#8221;
查看
也可以到godoc网站去看</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rails_admin的权限控制]]></title>
    <link href="http://mjason.github.com/blog/2013/01/14/rails-adminde-quan-xian-kong-zhi/"/>
    <updated>2013-01-14T14:32:00+08:00</updated>
    <id>http://mjason.github.com/blog/2013/01/14/rails-adminde-quan-xian-kong-zhi</id>
    <content type="html"><![CDATA[<p>rails_admin的权限控制中心</p>

<p>先在rails_admin的配置文件写入</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">RailsAdmin</span><span class="o">.</span><span class="n">config</span> <span class="k">do</span> <span class="o">|</span><span class="n">config</span><span class="o">|</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">authorize_with</span> <span class="ss">:cancan</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>之后使用rails 生成器生成cancan的控制文件,编辑文件</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Ability</span>
</span><span class='line'>  <span class="kp">include</span> <span class="ss">CanCan</span><span class="p">:</span><span class="ss">:Ability</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
</span><span class='line'>    <span class="n">user</span> <span class="o">||=</span> <span class="no">User</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">user</span> <span class="o">&amp;&amp;</span> <span class="n">user</span><span class="o">.</span><span class="n">is_superadmin?</span>
</span><span class='line'>      <span class="n">can</span> <span class="ss">:access</span><span class="p">,</span> <span class="ss">:rails_admin</span>   <span class="c1">#打开路由</span>
</span><span class='line'>      <span class="n">can</span> <span class="ss">:dashboard</span>   <span class="c1">#打开统计表</span>
</span><span class='line'>      <span class="n">can</span> <span class="ss">:manage</span><span class="p">,</span> <span class="ss">:all</span> <span class="c1">#这个角色可以读取所有的表</span>
</span><span class='line'>    <span class="k">elsif</span> <span class="n">user</span><span class="o">.</span><span class="n">is_admin?</span>
</span><span class='line'>      <span class="n">can</span> <span class="ss">:access</span><span class="p">,</span> <span class="ss">:rails_admin</span>
</span><span class='line'>      <span class="n">can</span> <span class="ss">:dashboard</span>
</span><span class='line'>      <span class="n">can</span> <span class="ss">:manage</span><span class="p">,</span> <span class="o">[</span><span class="no">Person</span><span class="o">]</span> <span class="c1"># 这个用户只能管理这个模型</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[简单的rails部署]]></title>
    <link href="http://mjason.github.com/blog/2013/01/08/jian-dan-de-railsbu-shu/"/>
    <updated>2013-01-08T22:37:00+08:00</updated>
    <id>http://mjason.github.com/blog/2013/01/08/jian-dan-de-railsbu-shu</id>
    <content type="html"><![CDATA[<p>rails的部署现在最流行的肯定是capistrano
刚开始学习的rails的时候，我也是用这个方式部署，不过每一次写部署脚本太伤了，各种错误，各种调试</p>

<p>自从有一次在ruby-toolbox看到了mina，终于有点感觉得到解救了</p>

<p>根据自己的使用mina的特点主要有：</p>

<ol>
<li>更加简洁的写法</li>
<li>更加友好的提示界面</li>
</ol>


<p>所以部署方式现在采用的是（rvm + mina + unicorn)</p>

<p>这里详细记录操作步骤</p>

<h3>安装mina</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#in Gemfile</span>
</span><span class='line'>
</span><span class='line'><span class="n">group</span> <span class="ss">:development</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;mina&#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>初始化mina 配置文件</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#cd your app project dir</span>
</span><span class='line'><span class="n">bundle</span>
</span><span class='line'><span class="n">mina</span> <span class="n">init</span>
</span></code></pre></td></tr></table></div></figure>


<h3>配置mina文件</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;mina/bundler&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;mina/rails&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;mina/git&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;mina/rvm&#39;</span>    <span class="c1"># for rvm support. (http://rvm.io)</span>
</span><span class='line'>
</span><span class='line'><span class="n">set</span> <span class="ss">:domain</span><span class="p">,</span> <span class="s1">&#39;foobar.com&#39;</span> <span class="c1">#设置你的服务ip地址，或者域名</span>
</span><span class='line'><span class="n">set</span> <span class="ss">:deploy_to</span><span class="p">,</span> <span class="s1">&#39;/var/www/foobar.com&#39;</span> <span class="c1">#部署的文件目录</span>
</span><span class='line'><span class="n">set</span> <span class="ss">:repository</span><span class="p">,</span> <span class="s1">&#39;git://...&#39;</span> <span class="c1"># git 地址</span>
</span><span class='line'><span class="n">set</span> <span class="ss">:branch</span><span class="p">,</span> <span class="s1">&#39;master&#39;</span> <span class="c1"># 确定分支</span>
</span><span class='line'>
</span><span class='line'><span class="n">set</span> <span class="ss">:shared_paths</span><span class="p">,</span> <span class="o">[</span><span class="s1">&#39;config/database.yml&#39;</span><span class="p">,</span> <span class="s1">&#39;log&#39;</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Optional settings:</span>
</span><span class='line'><span class="n">set</span> <span class="ss">:user</span><span class="p">,</span> <span class="s1">&#39;foobar&#39;</span>    <span class="c1"># ssh 用的用户名.</span>
</span><span class='line'><span class="c1">#   set :port, &#39;30000&#39;     # SSH 端口，默认22.</span>
</span><span class='line'>
</span><span class='line'><span class="n">task</span> <span class="ss">:environment</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">invoke</span> <span class="ss">:&#39;rvm:use[ruby-1.9.3-p125@default]&#39;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#mina setup 时会执行的操作</span>
</span><span class='line'><span class="n">task</span> <span class="ss">:setup</span> <span class="o">=&gt;</span> <span class="ss">:environment</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">queue!</span> <span class="sx">%[mkdir -p &quot;</span><span class="si">#{</span><span class="n">deploy_to</span><span class="si">}</span><span class="sx">/shared/log&quot;]</span> <span class="c1"># 创建日志目录</span>
</span><span class='line'>  <span class="n">queue!</span> <span class="sx">%[chmod g+rx,u+rwx &quot;</span><span class="si">#{</span><span class="n">deploy_to</span><span class="si">}</span><span class="sx">/shared/log&quot;]</span> <span class="c1"># 设置日志目录的权限</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">queue!</span> <span class="sx">%[mkdir -p &quot;</span><span class="si">#{</span><span class="n">deploy_to</span><span class="si">}</span><span class="sx">/shared/config&quot;]</span> <span class="c1">#创建目录</span>
</span><span class='line'>  <span class="n">queue!</span> <span class="sx">%[chmod g+rx,u+rwx &quot;</span><span class="si">#{</span><span class="n">deploy_to</span><span class="si">}</span><span class="sx">/shared/config&quot;]</span> <span class="c1"># 目录权限设置</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">queue!</span> <span class="sx">%[touch &quot;</span><span class="si">#{</span><span class="n">deploy_to</span><span class="si">}</span><span class="sx">/shared/config/database.yml&quot;]</span> <span class="c1"># 生成服务器的database.yml</span>
</span><span class='line'>  <span class="n">queue</span>  <span class="sx">%[-----&gt; Be sure to edit &#39;shared/config/database.yml&#39;.]</span> <span class="c1">#提示编辑服务器的database.yml， 可以删除 </span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 进行mina deploy会进行的操作</span>
</span><span class='line'><span class="n">desc</span> <span class="s2">&quot;Deploys the current version to the server.&quot;</span>
</span><span class='line'><span class="n">task</span> <span class="ss">:deploy</span> <span class="o">=&gt;</span> <span class="ss">:environment</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">deploy</span> <span class="k">do</span>
</span><span class='line'>    <span class="c1"># Put things that will set up an empty directory into a fully set-up</span>
</span><span class='line'>    <span class="c1"># instance of your project.</span>
</span><span class='line'>    <span class="n">invoke</span> <span class="ss">:&#39;git:clone&#39;</span>
</span><span class='line'>    <span class="n">invoke</span> <span class="ss">:&#39;deploy:link_shared_paths&#39;</span>
</span><span class='line'>    <span class="n">invoke</span> <span class="ss">:&#39;bundle:install&#39;</span>
</span><span class='line'>    <span class="n">invoke</span> <span class="ss">:&#39;rails:db_migrate&#39;</span>
</span><span class='line'>    <span class="n">invoke</span> <span class="ss">:&#39;rails:assets_precompile&#39;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">to</span> <span class="ss">:launch</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">queue</span> <span class="s1">&#39;touch tmp/restart.txt&#39;</span> <span class="c1"># 服务器重启服务器用的</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>根据自己的项目和服务器信息进行设置之后运行</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># 服务器目录初始化</span>
</span><span class='line'><span class="n">mina</span> <span class="n">setup</span>
</span><span class='line'><span class="c1"># 进行项目部署</span>
</span><span class='line'><span class="n">mina</span> <span class="n">deploy</span>
</span></code></pre></td></tr></table></div></figure>


<p>这样第一步就完成了</p>

<p>ssh 登录进服务器
然后建立一个专门用来部署的用户，安装rvm和ruby
网上的方法很多，这里就直接贴命令了,基于ubuntu12.04</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">ssh</span> <span class="n">root</span><span class="vi">@ip</span>
</span><span class='line'><span class="n">adduser</span> <span class="n">deploy</span>
</span><span class='line'><span class="n">su</span> <span class="n">deploy</span>
</span><span class='line'><span class="n">curl</span> <span class="o">-</span><span class="n">L</span> <span class="ss">https</span><span class="p">:</span><span class="sr">//</span><span class="n">get</span><span class="o">.</span><span class="n">rvm</span><span class="o">.</span><span class="n">io</span> <span class="o">|</span> <span class="n">bash</span> <span class="o">-</span><span class="n">s</span> <span class="n">stable</span>
</span><span class='line'><span class="c1"># 安装rvm的依赖</span>
</span><span class='line'><span class="n">rvm</span> <span class="n">requirements</span>
</span><span class='line'><span class="n">rvm</span> <span class="n">install</span> <span class="mi">1</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">3</span>
</span><span class='line'><span class="n">rvm</span> <span class="n">use</span> <span class="mi">1</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">3</span>
</span><span class='line'><span class="n">gem</span> <span class="n">install</span> <span class="n">unicorn</span>
</span><span class='line'><span class="c1"># bootup可以自由写，推荐写项目名称</span>
</span><span class='line'><span class="n">rvm</span> <span class="n">wrapper</span> <span class="n">ruby</span><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">3</span> <span class="n">bootup</span> <span class="n">unicorn_rails</span>
</span><span class='line'><span class="n">vim</span> <span class="vg">$HOME</span><span class="o">/.</span><span class="n">rvm</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">bootup_unicorn_rails</span>
</span></code></pre></td></tr></table></div></figure>


<p>因为mina的gem是安装在项目的vendor/bundle下面
所以需要修改一下rvm自动生成的脚本
将文件中的unicorn_rails 改为 你的项目地址+current/bin/unicorn_rails
eg: /home/deploy/test1/current/bin/unicorn_rails</p>

<p>接下来就是写启动脚本了，我的shell是以Ruby China的mimosa配置写的，这里就不重复<br>
直接贴上原帖地址和git地址 <br>
原帖地址：http://ruby-china.org/topics/471<br>
他提供的git地址: https://gist.github.com/3547765<br></p>

<p>收工！！！</p>
]]></content>
  </entry>
  
</feed>
